{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/@angular/compiler/src sync","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/ecommerce/admin-login/admin-login.component.ts","./src/app/ecommerce/admin-login/admin-login.component.html","./src/app/ecommerce/admin-product/admin-product.component.ts","./src/app/ecommerce/admin-product/admin-product.component.html","./src/app/ecommerce/ecommerce.component.ts","./src/app/ecommerce/ecommerce.component.html","./src/app/ecommerce/models/User.model.ts","./src/app/ecommerce/models/product-order.model.ts","./src/app/ecommerce/models/product-orders.model.ts","./src/app/ecommerce/orders/orders.component.ts","./src/app/ecommerce/orders/orders.component.html","./src/app/ecommerce/products/products.component.ts","./src/app/ecommerce/products/products.component.html","./src/app/ecommerce/services/EcommerceService.ts","./src/app/ecommerce/services/UserService.ts","./src/app/ecommerce/shopping-cart/shopping-cart.component.ts","./src/app/ecommerce/shopping-cart/shopping-cart.component.html","./src/app/ecommerce/user-login/user-login.component.ts","./src/app/ecommerce/user-login/user-login.component.html","./src/app/ecommerce/user-register/user-register.component.ts","./src/app/ecommerce/user-register/user-register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@angular/compiler/src sync recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { UserLoginComponent } from './ecommerce/user-login/user-login.component';\r\nimport { UserRegisterComponent } from './ecommerce/user-register/user-register.component';\r\nimport { AppComponent } from './app.component';\r\nimport { EcommerceComponent } from \"./ecommerce/ecommerce.component\"; \r\nimport { AdminLoginComponent } from './ecommerce/admin-login/admin-login.component';\r\nimport { AdminProductComponent } from './ecommerce/admin-product/admin-product.component';\r\n\r\nconst routes : Routes = [\r\n    {path: '', redirectTo: '/', pathMatch: 'full' },\r\n    {path: '', component: UserLoginComponent},\r\n    {path: 'register', component: UserRegisterComponent },\r\n    {path: 'login' , component: UserLoginComponent },\r\n    {path: 'ecommerce', component:EcommerceComponent},\r\n    {path: 'adminLogin', component:AdminLoginComponent},\r\n    {path: 'adminProduct', component:AdminProductComponent},\r\n];\r\n\r\n@NgModule({\r\n    imports:[RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<!-- <div class=\"container\">\r\n    <app-ecommerce></app-ecommerce>\r\n</div> -->\r\n<router-outlet></router-outlet>","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\n\n// Component imports\nimport { AppRoutingModule } from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {EcommerceComponent} from './ecommerce/ecommerce.component';\nimport {ProductsComponent} from './ecommerce/products/products.component';\nimport {ShoppingCartComponent} from './ecommerce/shopping-cart/shopping-cart.component';\nimport {OrdersComponent} from './ecommerce/orders/orders.component';\nimport {EcommerceService} from \"./ecommerce/services/EcommerceService\";\nimport {UserService} from \"./ecommerce/services/UserService\";\nimport { AdminProductComponent } from './ecommerce/admin-product/admin-product.component';\nimport { UserLoginComponent } from './ecommerce/user-login/user-login.component';\nimport { UserRegisterComponent } from './ecommerce/user-register/user-register.component';\nimport {AdminLoginComponent} from './ecommerce/admin-login/admin-login.component';\n\n// Material imports \n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatListModule} from '@angular/material/list';\nimport {BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        EcommerceComponent,\n        ProductsComponent,\n        ShoppingCartComponent,\n        OrdersComponent,\n        AdminProductComponent,\n        UserLoginComponent,\n        UserRegisterComponent,\n        AdminLoginComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatIconModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatRadioModule,\n        MatListModule,\n        MatSelectModule\n    ],\n    providers: [EcommerceService, UserService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { HttpClient } from '@angular/common/http';\nimport { UserService } from '../services/UserService';\nimport { User } from '../models/User.model';\nimport { stringify } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n\n  user: User;\n  sub: Subscription;\n  BackendUserName: string;\n  BackendPassword: string;\n  login = this.fb.group({\n    UserName : ['', Validators.required],\n    Password : ['', Validators.required],\n    });\n  hasUnitNumber = false;\n  pass;\n  private usersUrl = \"/api/users/\";\n  ngOnInit(){\n\n  }\n\n  constructor(private fb : FormBuilder, private router : Router, private userService : UserService, private http : HttpClient) {\n\n  }\n  onSubmit() {\n    var loginUserName = this.login.value.UserName;\n    // this.http.get(this.usersUrl.concat(loginUserName)).subscribe(res => {temp = res;});\n    // this.http.get(this.usersUrl.concat(this.login.value.UserName)).subscribe(res => {this.pass=res});\n    // this.userService.getUserfromUserName(stringify(this.login.value.UserName)).subscribe(res => {this.pass = res;});\n    // if(this.login.value.Username.substring(0,5))\n    var strUser = stringify(this.login.value.UserName);\n    console.log(strUser.substring(0,5)==='admin');\n\n    if(strUser.substring(0,5) === 'admin'){\n      // this.http.get(this.usersUrl.concat(this.login.value.UserName)).subscribe(res => {this.pass=res});\n      this.http.get(this.usersUrl.concat(strUser)).subscribe(res => {this.pass = res;});\n      console.log(this.pass);\n      if(this.pass != null){\n        if (this.pass.password == this.login.value.Password){\n              this.router.navigate(['/adminProduct']);\n            }else{\n              console.log(this.pass.password);\n              alert(\"Enter proper password\");\n          }\n      }\n      else{\n        alert(\"Enter proper username\");\n      }\n    }\n    else{\n      alert(\"Enter admin username\");\n    }\n  }\n}\n","<mat-toolbar style = \"margin-bottom: 5%;\"color=\"primary\">\n    <mat-toolbar-row>\n      <!--  <span>HOME</span> -->\n       <span><button mat-button href=\"/\">HOME</button></span>\n       <span class=\"spacer\"></span>\n       <button mat-button style = \"background-color : 'accent'\" routerLink=\"/login\">User Login</button>\n       <!-- <button mat-button style = \"background-color : 'accent'\" routerLink=\"/admin\">Admin</button> -->\n    </mat-toolbar-row>\n</mat-toolbar>\n<form [formGroup]=\"login\" novalidate (ngSubmit)=\"onSubmit()\">\n    <mat-card class=\"shipping-card\" style=\"box-shadow:none; margin-top: 10%;\">\n    <div class=\"row\">\n        <div class=\"col-sm-5\"></div>\n\n        <div class=\"col-sm-4\" style=\"margin-left: 5%;\">\n            <mat-card-header>\n                <mat-card-title>Login</mat-card-title>\n            </mat-card-header>\n        </div>\n    </div>\n        <mat-card-content>\n            <div class=\"row\">\n                <div class=\"col-sm-4\"></div>\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>User Name</mat-label>\n                        <input matInput placeholder=\"User name\" formControlName=\"UserName\" required>\n                    </mat-form-field>\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Password</mat-label>\n                        <input matInput type = \"password\" placeholder=\"Password\" formControlName=\"Password\" required>\n                    </mat-form-field>\n                </div>\n            </div>\n        </mat-card-content>\n        <mat-card-actions>\n            <div class=\"row\">\n              <div class = \"col-sm-5\"></div>\n              <div class = \"col-sm-1\" style=\"margin-left: 5%;\">\n                <button mat-raised-button color=\"primary\" [disabled]=\"!login.valid\" type=\"submit\">Submit</button>\n              </div>\n            </div>\n          </mat-card-actions>\n    </mat-card>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { HttpClient } from '@angular/common/http';\nimport { UserService } from '../services/UserService';\nimport { Product } from '../models/product.model';\nimport { stringify } from '@angular/compiler/src/util';\n\n\n@Component({\n  selector: 'app-admin-product',\n  templateUrl: './admin-product.component.html',\n  styleUrls: ['./admin-product.component.css']\n})\nexport class AdminProductComponent implements OnInit {\n  product: Product;\n  body;\n  create = this.fb.group({\n    // UserName : ['', Validators.required],\n    // FirstName : ['', Validators.required],\n    // LastName : ['', Validators.required],\n    // Address : ['', Validators.required],\n    // email : ['', Validators.required],\n    // Password : ['', Validators.required],\n    ProductName : ['', Validators.required],\n    price : ['', Validators.required],\n    pictureUrl : ['', Validators.required]\n    });\n  \n    constructor(private fb : FormBuilder, private router : Router, private userService : UserService, private http : HttpClient) {\n\n    }\n  ngOnInit(): void {\n  }\n  onSubmit() {\n    // this.user = new User(this.register.value.UserName,this.register.value.Password, this.register.value.FirstName, this.register.value.LastName, this.register.value.email, this.register.value.Address)\n    // console.log(this.user);\n    this.body = {\n      name:this.create.value.ProductName,\n      price:this.create.value.price,\n      pictureUrl:this.create.value.pictureUrl\n    }\n\n    console.log(this.body);\n    this.http.post<Product>(\"/api/products/\",this.body).subscribe(data => this.body);\n  }\n}","<mat-toolbar style = \"margin-bottom: 5%;\"color=\"primary\">\n    <mat-toolbar-row>\n      <!--  <span>HOME</span> -->\n       <span><a mat-button href=\"/\">HOME</a></span>\n       <span class=\"spacer\"></span>\n       <!-- <a mat-button style = \"background-color : 'accent'\" routerLink=\"/register\">Register</a> -->\n       <button mat-button style = \"background-color : 'accent'\" routerLink=\"/login\">Login</button>\n    </mat-toolbar-row>\n  </mat-toolbar>\n  <div class = \"container widthchg\">\n      <mat-toolbar>\n         <span>Products</span>\n      </mat-toolbar>\n      <form [formGroup]=\"create\" novalidate (ngSubmit)=\"onSubmit()\" class=\"my-form\">\n      <mat-card class=\"my-card\">\n               <mat-card-content>\n                        <mat-form-field class=\"full-width\">\n                           <mat-label>Product Name</mat-label>\n                           <input  matInput  placeholder=\"ProductName\" formControlName=\"ProductName\" name=\"ProductName\"  required>\n                        </mat-form-field>\n                        <mat-form-field class=\"full-width\">\n                           <mat-label>Price</mat-label>\n                           <input  matInput  placeholder=\"Price\" formControlName=\"price\" name=\"price\">\n                        </mat-form-field>\n                        <mat-form-field class=\"full-width\">\n                           <mat-label>pictureUrl</mat-label>\n                           <input  matInput placeholder=\"pictureUrl\" formControlName=\"pictureUrl\" name=\"pictureUrl\">\n                        </mat-form-field>\n         </mat-card-content>\n         <mat-card-actions>\n            <!-- <button mat-raised-button (click)=\"register()\" color=\"primary\">REGISTER</button> -->\n            <button mat-raised-button type=\"submit\" color=\"primary\">REGISTER </button>\n         </mat-card-actions>\n      </mat-card>\n    </form>\n  </div>\n  \n   ","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ProductsComponent} from \"./products/products.component\";\nimport {ShoppingCartComponent} from \"./shopping-cart/shopping-cart.component\";\nimport {OrdersComponent} from \"./orders/orders.component\";\n\n@Component({\n    selector: 'app-ecommerce',\n    templateUrl: './ecommerce.component.html',\n    styleUrls: ['./ecommerce.component.css']\n})\nexport class EcommerceComponent implements OnInit {\n    collapsed = true;\n    orderFinished = false;\n\n    @ViewChild('productsC')\n    productsC: ProductsComponent;\n\n    @ViewChild('shoppingCartC')\n    shoppingCartC: ShoppingCartComponent;\n\n    @ViewChild('ordersC')\n    ordersC: OrdersComponent;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    toggleCollapsed(): void {\n        this.collapsed = !this.collapsed;\n    }\n\n    finishOrder(orderFinished: boolean) {\n        this.orderFinished = orderFinished;\n    }\n\n    reset() {\n        this.orderFinished = false;\n        this.productsC.reset();\n        this.shoppingCartC.reset();\n        this.ordersC.paid = false;\n    }\n}\n","<mat-toolbar style = \"margin-bottom: 5%;\"color=\"primary\">\n    <mat-toolbar-row>\n      <!--  <span>HOME</span> -->\n       <span><button mat-button routerLink=\"/login\">LOG OUT</button></span>\n       <span class=\"spacer\"></span>\n       <!-- <a mat-button style = \"background-color : 'accent'\" routerLink=\"/register\">Register</a>\n       <a mat-button style = \"background-color : 'accent'\" routerLink=\"/login\">Login</a> -->\n    </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"row\" style=\"margin-left: 5pt;\">\n    <div class=\"col-md-9\">\n        <app-products #productsC [hidden]=\"orderFinished\"></app-products>\n    </div>\n    <div class=\"col-md-3\">\n        <app-shopping-cart (onOrderFinished)=finishOrder($event) #shoppingCartC\n                           [hidden]=\"orderFinished\"></app-shopping-cart>\n    </div>\n    <div class=\"col-md-6 offset-3\">\n        <app-orders #ordersC [hidden]=\"!orderFinished\"></app-orders>\n    </div>\n</div>\n","export class User{\r\n    // id : number;\r\n    UserName : string;\r\n    firstName : string;\r\n    lastName : string;\r\n    email : string;\r\n    address : string;\r\n    Password : string;\r\n\r\n    constructor(  UserName : string, Password : string, firstName : string, lastName : string, email : string, address: string){\r\n        // this.id = id;\r\n        this.UserName = UserName;\r\n        this.Password = Password;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.address = address;\r\n        this.email = email;\r\n    }\r\n}\r\n","import {Product} from \"./product.model\";\r\nexport class ProductOrder {\r\n    product: Product;\r\n    quantity: number;\r\n \r\n    constructor(product: Product, quantity: number) {\r\n        this.product = product;\r\n        this.quantity = quantity;\r\n    }\r\n}","import {ProductOrder} from \"./product-order.model\";\r\n\r\nexport class ProductOrders {\r\n    productOrders: ProductOrder[] = [];\r\n}","import {Component, OnInit} from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {EcommerceService} from \"../services/EcommerceService\";\n\n@Component({\n    selector: 'app-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n    orders: ProductOrders;\n    total: number;\n    paid: boolean;\n    sub: Subscription;\n\n    constructor(private ecommerceService: EcommerceService) {\n        this.orders = this.ecommerceService.ProductOrders;\n    }\n\n    ngOnInit() {\n        this.paid = false;\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.orders = this.ecommerceService.ProductOrders;\n        });\n        this.loadTotal();\n    }\n\n    pay() {\n        this.paid = true;\n        this.ecommerceService.saveOrder(this.orders).subscribe();\n    }\n\n    loadTotal() {\n        this.sub = this.ecommerceService.TotalChanged.subscribe(() => {\n            this.total = this.ecommerceService.Total;\n        });\n    }\n}\n","<h2 class=\"text-center\">ORDER</h2>\n<ul>\n    <li *ngFor=\"let order of orders.productOrders\">\n        {{ order.product.name }} - ${{ order.product.price }} x {{ order.quantity}} pcs.\n    </li>\n</ul>\n<h3 class=\"text-right\">Total amount: ${{ total }}</h3>\n\n<button class=\"btn btn-primary btn-block\" (click)=\"pay()\" *ngIf=\"!paid\">Pay</button>\n\n<div class=\"alert alert-success\" role=\"alert\" *ngIf=\"paid\">\n    <strong>Congratulations!</strong> You successfully made the order.\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ProductOrder} from \"../models/product-order.model\";\nimport {EcommerceService} from \"../services/EcommerceService\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Product} from \"../models/product.model\";\n\n@Component({\n    selector: 'app-products',\n    templateUrl: './products.component.html',\n    styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n    productOrders: ProductOrder[] = [];\n    products: Product[] = [];\n    selectedProductOrder: ProductOrder;\n    private shoppingCartOrders: ProductOrders;\n    sub: Subscription;\n    productSelected: boolean = false;\n\n    constructor(private ecommerceService: EcommerceService) {\n    }\n\n    ngOnInit() {\n        this.productOrders = [];\n        this.loadProducts();\n        this.loadOrders();\n    }\n\n    addToCart(order: ProductOrder) {\n        this.ecommerceService.SelectedProductOrder = order;\n        this.selectedProductOrder = this.ecommerceService.SelectedProductOrder;\n        this.productSelected = true;\n    }\n\n    removeFromCart(productOrder: ProductOrder) {\n        let index = this.getProductIndex(productOrder.product);\n        if (index > -1) {\n            this.shoppingCartOrders.productOrders.splice(\n                this.getProductIndex(productOrder.product), 1);\n        }\n        this.ecommerceService.ProductOrders = this.shoppingCartOrders;\n        this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n        this.productSelected = false;\n    }\n\n    getProductIndex(product: Product): number {\n        return this.ecommerceService.ProductOrders.productOrders.findIndex(\n            value => value.product === product);\n    }\n\n    isProductSelected(product: Product): boolean {\n        return this.getProductIndex(product) > -1;\n    }\n\n    loadProducts() {\n        this.ecommerceService.getAllProducts()\n            .subscribe(\n                (products: any[]) => {\n                    this.products = products;\n                    this.products.forEach(product => {\n                        this.productOrders.push(new ProductOrder(product, 0));\n                    })\n                },\n                (error) => console.log(error)\n            );\n    }\n\n    loadOrders() {\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n        });\n    }\n\n    reset() {\n        this.productOrders = [];\n        this.loadProducts();\n        this.ecommerceService.ProductOrders.productOrders = [];\n        this.loadOrders();\n        this.productSelected = false;\n    }\n}\n","<div class=\"row card-deck\">\n    <div class=\"col-lg-4 col-md-6 mb-4\" *ngFor=\"let order of productOrders\">\n        <div class=\"card text-center\">\n            <div class=\"card-header\">\n                <h4>{{order.product.name}}</h4>\n            </div>\n            <div class=\"card-body\">\n                <a ><img class=\"card-img-top\" width=\"200\" height = \"200\" src={{order.product.pictureUrl}} alt=\"\"></a>\n                <h5 class=\"card-title\">${{order.product.price}}</h5>\n                <div class=\"row\">\n                    <div class=\"col-4 padding-0\" *ngIf=\"!isProductSelected(order.product)\">\n                        <input type=\"number\" min=\"0\" class=\"form-control\" [(ngModel)]=order.quantity>\n                    </div>\n                    <div class=\"col-4 padding-0\" *ngIf=\"!isProductSelected(order.product)\">\n                        <button class=\"btn btn-primary\" (click)=\"addToCart(order)\"\n                                [disabled]=\"order.quantity <= 0\">Add To Cart\n                        </button>\n                    </div>\n                    <div class=\"col-12\" *ngIf=\"isProductSelected(order.product)\">\n                        <button class=\"btn btn-primary btn-block\"\n                                (click)=\"removeFromCart(order)\">Remove From Cart\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {ProductOrder} from \"../models/product-order.model\";\r\nimport {Subject} from \"rxjs/internal/Subject\";\r\nimport {ProductOrders} from \"../models/product-orders.model\";\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class EcommerceService {\r\n    private productsUrl = \"/api/products\";\r\n    private ordersUrl = \"/api/orders\";\r\n\r\n    private productOrder: ProductOrder;\r\n    private orders: ProductOrders = new ProductOrders();\r\n\r\n    private productOrderSubject = new Subject();\r\n    private ordersSubject = new Subject();\r\n    private totalSubject = new Subject();\r\n\r\n    private total: number;\r\n\r\n    ProductOrderChanged = this.productOrderSubject.asObservable();\r\n    OrdersChanged = this.ordersSubject.asObservable();\r\n    TotalChanged = this.totalSubject.asObservable();\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAllProducts() {\r\n        return this.http.get(this.productsUrl);\r\n    }\r\n\r\n    saveOrder(order: ProductOrders) {\r\n        return this.http.post(this.ordersUrl, order);\r\n    }\r\n\r\n    set SelectedProductOrder(value: ProductOrder) {\r\n        this.productOrder = value;\r\n        this.productOrderSubject.next();\r\n    }\r\n\r\n    get SelectedProductOrder() {\r\n        return this.productOrder;\r\n    }\r\n\r\n    set ProductOrders(value: ProductOrders) {\r\n        this.orders = value;\r\n        this.ordersSubject.next();\r\n    }\r\n\r\n    get ProductOrders() {\r\n        return this.orders;\r\n    }\r\n\r\n    get Total() {\r\n        return this.total;\r\n    }\r\n\r\n    set Total(value: number) {\r\n        this.total = value;\r\n        this.totalSubject.next();\r\n    }\r\n}\r\n","import {Subject} from \"rxjs/internal/Subject\";\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Observable} from 'rxjs';\r\nimport {User} from \"../models/User.model\";\r\n\r\n@Injectable()\r\nexport class UserService{\r\n    private usersUrl = \"/api/users/\";\r\n    private user: User;\r\n    \r\n    private UserSubject = new Subject();\r\n\r\n    // UserChanged = this.UserSubject.asObservable();\r\n    constructor(private http:HttpClient){}\r\n    \r\n    getUserfromUserName(UserName: string):Observable<string>{\r\n        return this.http.get<string>(this.usersUrl.concat(UserName));\r\n    }\r\n\r\n\r\n}\r\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {ProductOrder} from \"../models/product-order.model\";\nimport {EcommerceService} from \"../services/EcommerceService\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\n\n@Component({\n    selector: 'app-shopping-cart',\n    templateUrl: './shopping-cart.component.html',\n    styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit, OnDestroy {\n    orderFinished: boolean;\n    orders: ProductOrders;\n    total: number;\n    sub: Subscription;\n\n    @Output() onOrderFinished: EventEmitter<boolean>;\n\n    constructor(private ecommerceService: EcommerceService) {\n        this.total = 0;\n        this.orderFinished = false;\n        this.onOrderFinished = new EventEmitter<boolean>();\n    }\n\n    ngOnInit() {\n        this.orders = new ProductOrders();\n        this.loadCart();\n        this.loadTotal();\n    }\n\n    private calculateTotal(products: ProductOrder[]): number {\n        let sum = 0;\n        products.forEach(value => {\n            sum += (value.product.price * value.quantity);\n        });\n        return sum;\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    finishOrder() {\n        this.orderFinished = true;\n        this.ecommerceService.Total = this.total;\n        this.onOrderFinished.emit(this.orderFinished);\n    }\n\n    loadTotal() {\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.total = this.calculateTotal(this.orders.productOrders);\n        });\n    }\n\n    loadCart() {\n        this.sub = this.ecommerceService.ProductOrderChanged.subscribe(() => {\n            let productOrder = this.ecommerceService.SelectedProductOrder;\n            if (productOrder) {\n                this.orders.productOrders.push(new ProductOrder(\n                    productOrder.product, productOrder.quantity));\n            }\n            this.ecommerceService.ProductOrders = this.orders;\n            this.orders = this.ecommerceService.ProductOrders;\n            this.total = this.calculateTotal(this.orders.productOrders);\n        });\n    }\n\n    reset() {\n        this.orderFinished = false;\n        this.orders = new ProductOrders();\n        this.orders.productOrders = []\n        this.loadTotal();\n        this.total = 0;\n    }\n}\n","<div class=\"card text-white bg-primary mb-3\" style=\"max-width: 18rem;\">\n    <div class=\"card-header text-center\">Shopping Cart</div>\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Total: ${{total}}</h5>\n        <hr>\n        <h6 class=\"card-title\">Items bought:</h6>\n\n        <ul>\n            <li *ngFor=\"let order of orders.productOrders\">\n                {{ order.product.name }} - {{ order.quantity}} pcs.\n            </li>\n        </ul>\n\n        <button class=\"btn btn-light btn-block\" (click)=\"finishOrder()\"\n                [disabled]=\"orders.productOrders.length == 0\">Checkout\n        </button>\n    </div>\n</div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { HttpClient } from '@angular/common/http';\nimport { UserService } from '../services/UserService';\nimport { User } from '../models/User.model';\nimport { stringify } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit{\n  user: User;\n  sub: Subscription;\n  BackendUserName: string;\n  BackendPassword: string;\n  login = this.fb.group({\n    UserName : ['', Validators.required],\n    Password : ['', Validators.required],\n    });\n  hasUnitNumber = false;\n  pass;\n  private usersUrl = \"/api/users/\";\n  ngOnInit(){\n\n  }\n\n  constructor(private fb : FormBuilder, private router : Router, private userService : UserService, private http : HttpClient) {\n\n  }\n  onSubmit() {\n    var temp;\n    var loginUserName = this.login.value.UserName;\n    // this.http.get(this.usersUrl.concat(loginUserName)).subscribe(res => {temp = res;});\n    this.http.get(this.usersUrl.concat(this.login.value.UserName)).subscribe(res => {this.pass=res});\n    // this.userService.getUserfromUserName(stringify(this.login.value.Username)).subscribe(res => {this.pass = res;});\n    console.log(this.login.value.UserName);\n    console.log(this.pass);\n    if (this.pass.password == this.login.value.Password){\n      this.router.navigate(['/ecommerce']);\n    }else{\n      console.log(this.pass.password);\n      alert(\"Enter proper password\");\n    }\n    // console.log(this.usersUrl.concat(loginUserName))\n    // console.log(this.login.value.UserName);\n    // console.log(this.pass);\n    // this.router.navigate(['/ecommerce']);\n    // alert(this.login.get(\"Password\"));\n  }\n}\n","<mat-toolbar style = \"margin-bottom: 5%;\"color=\"primary\">\r\n    <mat-toolbar-row>\r\n      <!--  <span>HOME</span> -->\r\n       <span><button mat-button href=\"/\">HOME</button></span>\r\n       <span class=\"spacer\"></span>\r\n       <button mat-button style = \"background-color : 'accent'\" routerLink=\"/register\">Register</button>\r\n       <button mat-button style = \"background-color : 'accent'\" routerLink=\"/adminLogin\">Admin</button>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n<form [formGroup]=\"login\" novalidate (ngSubmit)=\"onSubmit()\">\r\n    <mat-card class=\"shipping-card\" style=\"box-shadow:none; margin-top: 10%;\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5\"></div>\r\n\r\n        <div class=\"col-sm-4\" style=\"margin-left: 5%;\">\r\n            <mat-card-header>\r\n                <mat-card-title>Login</mat-card-title>\r\n            </mat-card-header>\r\n        </div>\r\n    </div>\r\n        <mat-card-content>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4\"></div>\r\n                <div class=\"col-sm-4\">\r\n                    <mat-form-field class=\"full-width\">\r\n                        <mat-label>User Name</mat-label>\r\n                        <input matInput placeholder=\"User name\" formControlName=\"UserName\" required>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"full-width\">\r\n                        <mat-label>Password</mat-label>\r\n                        <input matInput type = \"password\" placeholder=\"Password\" formControlName=\"Password\" required>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <div class=\"row\">\r\n              <div class = \"col-sm-5\"></div>\r\n              <div class = \"col-sm-1\" style=\"margin-left: 5%;\">\r\n                <button mat-raised-button color=\"primary\" [disabled]=\"!login.valid\" type=\"submit\">Submit</button>\r\n              </div>\r\n            </div>\r\n          </mat-card-actions>\r\n    </mat-card>\r\n</form>","  import { Component, OnInit } from '@angular/core';\n  import { FormBuilder, Validators } from '@angular/forms';\n  import { Router } from '@angular/router';\n  import { Subscription } from 'rxjs/internal/Subscription';\n  import { HttpClient } from '@angular/common/http';\n  import { UserService } from '../services/UserService';\n  import { User } from '../models/User.model';\n  import { stringify } from '@angular/compiler/src/util';\n\n  @Component({\n    selector: 'app-user-register',\n    templateUrl: './user-register.component.html',\n    styleUrls: ['./user-register.component.css']\n  })\n  export class UserRegisterComponent implements OnInit {\n    user: User;\n    body;\n    register = this.fb.group({\n      UserName : ['', Validators.required],\n      FirstName : ['', Validators.required],\n      LastName : ['', Validators.required],\n      Address : ['', Validators.required],\n      email : ['', Validators.required],\n      Password : ['', Validators.required],\n      });\n    \n      constructor(private fb : FormBuilder, private router : Router, private userService : UserService, private http : HttpClient) {\n\n      }\n    ngOnInit(): void {\n    }\n    onSubmit() {\n      this.user = new User(this.register.value.UserName,this.register.value.Password, this.register.value.FirstName, this.register.value.LastName, this.register.value.email, this.register.value.Address)\n      console.log(this.user);\n      this.body = {\n        username:this.register.value.UserName,\n        firstname:this.register.value.FirstName,\n        lastname:this.register.value.LastName,\n        password:this.register.value.Password,\n        email:this.register.value.email,\n        address:this.register.value.Address\n      }\n      this.http.post<User>(\"/api/users/\",this.body).subscribe(data => this.body);\n    }\n  }\n","<mat-toolbar style = \"margin-bottom: 5%;\"color=\"primary\">\n  <mat-toolbar-row>\n    <!--  <span>HOME</span> -->\n     <span><a mat-button href=\"/\">HOME</a></span>\n     <span class=\"spacer\"></span>\n     <!-- <a mat-button style = \"background-color : 'accent'\" routerLink=\"/register\">Register</a> -->\n     <button mat-button style = \"background-color : 'accent'\" routerLink=\"/login\">Login</button>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class = \"container widthchg\">\n    <mat-toolbar>\n       <span>Registration</span>\n    </mat-toolbar>\n    <form [formGroup]=\"register\" novalidate (ngSubmit)=\"onSubmit()\" class=\"my-form\">\n    <mat-card class=\"my-card\">\n             <mat-card-content>\n                  <mat-form-field class=\"full-width\">\n                    <mat-label>Username</mat-label>\n                    <input  matInput  placeholder=\"Username\" formControlName=\"UserName\" name=\"uname\"  required>\n                 </mat-form-field>\n                   <mat-form-field class=\"full-width\">\n                         <mat-label>First Name</mat-label>\n                         <input  matInput  placeholder=\"First name\" formControlName=\"FirstName\" name=\"fname\"  required>\n                      </mat-form-field>\n                      <mat-form-field class=\"full-width\">\n                         <mat-label>Last Name</mat-label>\n                         <input  matInput  placeholder=\"Last Name\" formControlName=\"LastName\" name=\"lname\"  required>\n                      </mat-form-field>\n                      <mat-form-field class=\"full-width\">\n                         <mat-label>Address</mat-label>\n                         <input  matInput  placeholder=\"Address\" formControlName=\"Address\" name=\"address\"  required>\n                      </mat-form-field>\n                      <mat-form-field class=\"full-width\">\n                         <mat-label>Email</mat-label>\n                         <input  matInput  placeholder=\"Email\" formControlName=\"email\" name=\"email\">\n                      </mat-form-field>\n                      <mat-form-field class=\"full-width\">\n                         <mat-label>Password</mat-label>\n                         <input  matInput type=\"password\" placeholder=\"Password\" formControlName=\"Password\" name=\"password\">\n                      </mat-form-field>\n       </mat-card-content>\n       <mat-card-actions>\n          <!-- <button mat-raised-button (click)=\"register()\" color=\"primary\">REGISTER</button> -->\n          <button mat-raised-button type=\"submit\" color=\"primary\">REGISTER </button>\n       </mat-card-actions>\n    </mat-card>\n  </form>\n</div>\n\n ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}